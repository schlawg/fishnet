name: Build

on: [push, pull_request]

jobs:
  linux-x86-64:
    runs-on: ubuntu-18.04
    env:
      CXX: g++-8
    steps:
      - run: sudo add-apt-repository ppa:ubuntu-toolchain-r/test && sudo apt-get update && sudo apt-get install -y g++-8
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/checkout@v3
        with:
          repository: lichess-org/intel-sde
          ssh-key: ${{ secrets.ID_RSA_INTEL_SDE }}
          ref: main
          path: intel-sde
        id: sde
        continue-on-error: true
      - run: tar xf intel-sde/sde-external-9.0.0-2021-11-07-lin.tar.xz && echo SDE_PATH=$PWD/sde-external-9.0.0-2021-11-07-lin/sde64 | tee $GITHUB_ENV
        if: steps.sde.outcome == 'success'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - run: cargo install --force --git https://github.com/rust-secure-code/cargo-auditable cargo-auditable
      - run: cargo auditable build --release -vv
      - run: mv target/release/fishnet fishnet-x86_64-unknown-linux-gnu
      - uses: actions/upload-artifact@v3
        with:
          name: fishnet-x86_64-unknown-linux-gnu
          path: fishnet-x86_64-unknown-linux-gnu
  windows-x86-64:
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          update: true
          install: mingw-w64-x86_64-gcc mingw-w64-x86_64-rust mingw-w64-x86_64-make tar
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/checkout@v3
        with:
          repository: lichess-org/intel-sde
          ssh-key: ${{ secrets.ID_RSA_INTEL_SDE }}
          ref: main
          path: intel-sde
        id: sde
        continue-on-error: true
      - run: tar xf intel-sde/sde-external-9.0.0-2021-11-07-win.tar.xz && echo SDE_PATH=$(cygpath -u $GITHUB_WORKSPACE)/sde-external-9.0.0-2021-11-07-win/sde.exe | tee $GITHUB_ENV
        if: steps.sde.outcome == 'success'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo install --git https://github.com/rust-secure-code/cargo-auditable cargo-auditable
      - run: cargo auditable build --release --target x86_64-pc-windows-gnu -vv
      - run: mv target/x86_64-pc-windows-gnu/release/fishnet.exe fishnet-x86_64-pc-windows-gnu.exe
      - uses: actions/upload-artifact@v3
        with:
          name: fishnet-x86_64-pc-windows-gnu
          path: fishnet-x86_64-pc-windows-gnu.exe
  macos-x86-64:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - run: cargo install --force --git https://github.com/rust-secure-code/cargo-auditable cargo-auditable
      - run: cargo auditable build --release -vv
      - run: mv target/release/fishnet fishnet-x86_64-apple-darwin
      - uses: actions/upload-artifact@v3
        with:
          name: fishnet-x86_64-apple-darwin
          path: fishnet-x86_64-apple-darwin
  macos-aarch64:
    runs-on: macos-11.0
    env:
      CXXFLAGS: -target arm64-apple-macos11
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: aarch64-apple-darwin
      - run: cargo install --force --git https://github.com/rust-secure-code/cargo-auditable cargo-auditable
      - run: cargo auditable build --release --target aarch64-apple-darwin -vv
      - run: mv target/aarch64-apple-darwin/release/fishnet fishnet-aarch64-apple-darwin
      - uses: actions/upload-artifact@v3
        with:
          name: fishnet-aarch64-apple-darwin
          path: fishnet-aarch64-apple-darwin
  release:
    runs-on: ubuntu-latest
    needs:
      - linux-x86-64
      - windows-x86-64
      - macos-x86-64
      - macos-aarch64
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
      - run: ls -R
      - run: sha256sum fishnet-x86_64-unknown-linux-gnu/fishnet-x86_64-unknown-linux-gnu
      - run: sha256sum fishnet-x86_64-pc-windows-gnu/fishnet-x86_64-pc-windows-gnu.exe
      - run: sha256sum fishnet-x86_64-apple-darwin/fishnet-x86_64-apple-darwin
      - run: sha256sum fishnet-aarch64-apple-darwin/fishnet-aarch64-apple-darwin
      - uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: fishnet ${{ github.ref }}
          draft: true
          prerelease: false
        id: create_release
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: fishnet-x86_64-unknown-linux-gnu/fishnet-x86_64-unknown-linux-gnu
          asset_name: fishnet-x86_64-unknown-linux-gnu
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: fishnet-x86_64-pc-windows-gnu/fishnet-x86_64-pc-windows-gnu.exe
          asset_name: fishnet-x86_64-pc-windows-gnu.exe
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: fishnet-x86_64-apple-darwin/fishnet-x86_64-apple-darwin
          asset_name: fishnet-x86_64-apple-darwin
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: fishnet-aarch64-apple-darwin/fishnet-aarch64-apple-darwin
          asset_name: fishnet-aarch64-apple-darwin
          asset_content_type: application/octet-stream
